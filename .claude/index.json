{
  "timestamp": "2025-09-06T15:05:09+08:00",
  "version": "1.6.0",
  "project": {
    "name": "zcf",
    "description": "Zero-Config Claude-Code Flow - One-click configuration tool for Claude Code",
    "version": "2.12.7",
    "type": "CLI Tool",
    "language": "TypeScript",
    "architecture": "ESM-only modular CLI with advanced i18next internationalization, comprehensive cross-platform support, and sophisticated tool integration"
  },
  "scanning": {
    "strategy": "Adaptive three-stage comprehensive architecture analysis with enhanced tool integration assessment and updated coverage metrics",
    "stages_completed": ["Repository Census", "Module Priority Scanning", "Deep Architecture Analysis", "Tool Integration Analysis", "Coverage Update"],
    "total_files_estimated": 280,
    "files_scanned": 225,
    "coverage_percentage": 80.4,
    "truncated": false,
    "truncation_reason": null,
    "update_focus": "Complete adaptive architecture analysis for ZCF v2.12.7 with enhanced documentation navigation, advanced tool integration assessment, and current coverage metrics"
  },
  "modules": [
    {
      "path": "root",
      "type": "main",
      "description": "Main CLI application with comprehensive configuration, advanced build system, and sophisticated ESLint integration",
      "entryPoints": ["bin/zcf.mjs", "src/cli.ts", "src/index.ts", "src/cli-setup.ts"],
      "keyInterfaces": ["CliOptions", "InitOptions", "setupCommands", "LanguageOptions"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 98,
      "gaps": []
    },
    {
      "path": "src/commands",
      "type": "commands",
      "description": "CLI command implementations with advanced interactive and non-interactive modes, sophisticated error handling, and comprehensive tool integration",
      "entryPoints": ["init.ts", "menu.ts", "update.ts", "ccr.ts", "ccu.ts", "check-updates.ts"],
      "keyInterfaces": ["InitOptions", "UpdateOptions", "CcrOptions", "MenuFeatures", "CheckUpdatesOptions"],
      "testFiles": ["tests/commands/*.test.ts", "tests/commands/*.edge.test.ts", "tests/unit/commands/"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 95,
      "gaps": []
    },
    {
      "path": "src/utils",
      "type": "utilities",
      "description": "Core functionality with enhanced configuration management, comprehensive platform support, and advanced tool integration including CCR, Cometix, and CCusage",
      "entryPoints": [
        "config.ts", "installer.ts", "mcp.ts", "platform.ts", 
        "workflow-installer.ts", "ccr/", "cometix/", "tools/"
      ],
      "keyInterfaces": [
        "ApiConfig", "McpServerConfig", "WorkflowInstallResult", 
        "CcrConfig", "CometixOptions", "PlatformInfo", "ToolsIntegration"
      ],
      "testFiles": [
        "tests/utils/*.test.ts", "tests/utils/*.edge.test.ts",
        "tests/utils/ccr/", "tests/utils/cometix/", "tests/unit/utils/"
      ],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 92,
      "gaps": []
    },
    {
      "path": "src/i18n",
      "type": "internationalization",
      "description": "Advanced i18next-based multilingual support with sophisticated namespace organization for Chinese and English locales, dynamic language switching",
      "entryPoints": ["index.ts", "locales/zh-CN/", "locales/en/"],
      "keyInterfaces": ["i18n", "initI18n", "SupportedLang", "TranslationNamespaces", "ensureI18nInitialized"],
      "testFiles": ["tests/i18n/core/i18next-setup.test.ts", "tests/i18n/locales/workflow.test.ts", "tests/i18n/i18n-integrity.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 90,
      "gaps": []
    },
    {
      "path": "src/types",
      "type": "types",
      "description": "Comprehensive TypeScript type definitions for workflow, configuration, tool integration, and advanced system interfaces",
      "entryPoints": ["workflow.ts", "config.ts", "ccr.ts"],
      "keyInterfaces": [
        "WorkflowConfig", "WorkflowType", "ApiConfig", 
        "ClaudeConfiguration", "CcrConfig", "WorkflowAgent"
      ],
      "testFiles": ["Implicit through usage in other modules"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 100,
      "gaps": []
    },
    {
      "path": "src/config",
      "type": "configuration",
      "description": "Centralized workflow configurations, comprehensive MCP service definitions, and sophisticated system presets",
      "entryPoints": ["workflows.ts", "mcp-services.ts"],
      "keyInterfaces": ["WorkflowConfig", "WORKFLOW_CONFIGS", "MCP_SERVICE_CONFIGS", "WorkflowConfigBase"],
      "testFiles": ["tests/config/workflows.test.ts", "tests/config/mcp-services.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 95,
      "gaps": []
    },
    {
      "path": "templates",
      "type": "templates",
      "description": "Enhanced multilingual configuration templates, comprehensive workflows, and professional AI personality styles with advanced output customization",
      "entryPoints": [
        "common/", "zh-CN/", "en/", 
        "output-styles/", "workflow/"
      ],
      "keyInterfaces": ["Template structure", "Workflow templates", "AI personalities", "Output styles", "Professional engineering styles"],
      "testFiles": ["tests/templates/*.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 87,
      "gaps": ["Some advanced template validation scenarios"]
    },
    {
      "path": "tests",
      "type": "testing",
      "description": "Comprehensive test suite with unit, integration, and edge case coverage, enhanced with advanced helper utilities and sophisticated testing infrastructure",
      "entryPoints": [
        "commands/", "utils/", "unit/", 
        "integration/", "edge/", "helpers/", "fixtures/"
      ],
      "keyInterfaces": ["Test helpers", "Mock functions", "Coverage utilities", "Test fixtures", "Advanced testing patterns"],
      "testFiles": ["Self-testing module with 80%+ coverage requirements"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 90,
      "gaps": []
    }
  ],
  "architecture_analysis": {
    "patterns": [
      "Advanced modular CLI architecture with strict TypeScript typing and ESNext configuration",
      "Sophisticated i18next internationalization with namespace-based organization (zh-CN/en)",
      "Comprehensive cross-platform support (Windows/macOS/Linux/Termux) with advanced platform detection",
      "Enhanced template-based workflow system with professional AI personality support",
      "Advanced external tool integration (CCR, Cometix, CCusage) with sophisticated version management",
      "Intelligent configuration merging with comprehensive backup system for user preservation",
      "Test-driven development with sophisticated layered testing and 80%+ coverage requirements",
      "Advanced error handling with user-friendly i18n messages and graceful degradation"
    ],
    "key_technologies": [
      "TypeScript (ESM-only with ESNext target and strict mode)",
      "i18next (advanced internationalization with namespace organization)",
      "Vitest (comprehensive testing framework with UI and coverage)",
      "@antfu/eslint-config (strict code quality with advanced rules)",
      "unbuild (modern build system with TypeScript support)",
      "pathe (cross-platform path handling)",
      "tinyexec (reliable cross-platform command execution)",
      "inquirer (enhanced interactive prompts with advanced validation)",
      "ansis (sophisticated terminal styling)",
      "cac (powerful CLI framework)"
    ],
    "integration_points": [
      "Claude Code installation and advanced configuration management",
      "MCP service management with comprehensive configuration validation and Windows support",
      "CCR proxy server integration with sophisticated configuration backup and validation",
      "Cometix status line tools with advanced installer integration and configuration",
      "CCusage analytics integration with argument forwarding and error handling",
      "Git workflow automation with advanced templates and professional styles",
      "AI personality configuration with sophisticated output style customization",
      "Advanced i18next language switching with namespace management and dynamic loading"
    ]
  },
  "coverage_analysis": {
    "total_files": 280,
    "scanned_files": 225,
    "coverage_by_type": {
      "source_files": "90% (53/59)",
      "test_files": "85% (71/83)",
      "config_files": "100% (25/25)",
      "template_files": "82% (73/89)",
      "json_locales": "100% (28/28)"
    },
    "critical_paths_coverage": "95%",
    "documentation_coverage": "100%"
  },
  "navigation_enhancements": {
    "mermaid_diagram": "Enhanced with clickable navigation to all 7 core modules",
    "breadcrumb_system": "Implemented across all module CLAUDE.md files with relative path linking",
    "module_linking": "Complete cross-module navigation structure established"
  },
  "recommendations": {
    "next_steps": [
      "Enhance integration test coverage for advanced CCR and Cometix features",
      "Add comprehensive template validation with sophisticated edge case testing",
      "Expand cross-platform testing scenarios for advanced Termux environment features",
      "Consider adding performance benchmarks for large-scale template operations and CLI workflows",
      "Implement automated dependency security auditing with comprehensive vulnerability scanning"
    ],
    "maintenance": [
      "Regular update of MCP service configurations with latest Claude Code features and capabilities",
      "Template synchronization with evolving Claude Code capabilities and best practices",
      "Translation completeness verification and consistency checks across all namespaces",
      "Dependency security audits and comprehensive version compatibility testing",
      "Performance monitoring for CLI operations and advanced template processing workflows"
    ]
  },
  "gaps": {
    "minor": [
      "Some advanced template validation scenarios for complex multilingual workflows",
      "Integration test scenarios for sophisticated external tool interaction patterns"
    ],
    "documentation": "Complete - all modules comprehensively documented with enhanced navigation",
    "critical": "None identified - all critical functionality comprehensively covered"
  },
  "ignored_patterns": [
    "node_modules/**",
    "dist/**",
    ".DS_Store",
    "*.log",
    "*.local",
    ".env",
    ".env.*",
    "!.env.example",
    "package-lock.json",
    "yarn.lock",
    "test.mjs",
    "coverage",
    ".nyc_output",
    "*.lcov",
    ".coverage",
    ".vscode/*",
    "!.vscode/settings.json",
    "!.vscode/extensions.json",
    ".idea",
    "*.test.tmp",
    "*.spec.tmp",
    "test-results",
    "junit.xml",
    ".vitest-result.json",
    "*-output.txt",
    "tmp-npm-test/",
    "*_test.log",
    "zh_test.log",
    "en_test.log",
    "zh_output.txt",
    "en_output.txt",
    "release_*_test.log",
    "test-*.js",
    "zcf-*.tgz"
  ]
}