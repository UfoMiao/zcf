{
  "timestamp": "2025-09-01T17:33:24+08:00",
  "version": "1.4.0",
  "project": {
    "name": "zcf",
    "description": "Zero-Config Claude-Code Flow - One-click configuration tool for Claude Code",
    "version": "2.12.4",
    "type": "CLI Tool",
    "language": "TypeScript",
    "architecture": "ESM-only modular CLI with comprehensive i18next internationalization and cross-platform support"
  },
  "scanning": {
    "strategy": "Adaptive three-stage comprehensive architecture initialization with i18n enhancement analysis",
    "stages_completed": ["Repository Census", "Module Priority Scanning", "Deep Architecture Analysis"],
    "total_files_estimated": 225,
    "files_scanned": 200,
    "coverage_percentage": 88.9,
    "truncated": false,
    "truncation_reason": null,
    "update_focus": "Complete architecture refresh with advanced i18next integration and CLI enhancement for v2.12.4"
  },
  "modules": [
    {
      "path": "root",
      "type": "main",
      "description": "Main CLI application with comprehensive configuration, advanced build system, and ESLint integration",
      "entryPoints": ["bin/zcf.mjs", "src/cli.ts", "src/index.ts", "src/cli-setup.ts"],
      "keyInterfaces": ["CliOptions", "InitOptions", "setupCommands"],
      "claudeMdStatus": "updated",
      "scanned": true,
      "coverage": 98,
      "gaps": []
    },
    {
      "path": "src/commands",
      "type": "commands",
      "description": "CLI command implementations with advanced interactive and non-interactive modes, enhanced error handling",
      "entryPoints": ["init.ts", "menu.ts", "update.ts", "ccr.ts", "ccu.ts", "check-updates.ts"],
      "keyInterfaces": ["InitOptions", "UpdateOptions", "CcrOptions", "MenuFeatures", "CheckUpdatesOptions"],
      "testFiles": ["tests/commands/*.test.ts", "tests/commands/*.edge.test.ts", "tests/unit/commands/"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 92,
      "gaps": []
    },
    {
      "path": "src/utils",
      "type": "utilities",
      "description": "Core functionality with enhanced configuration management, platform support, and comprehensive tool integration",
      "entryPoints": [
        "config.ts", "installer.ts", "mcp.ts", "platform.ts", 
        "workflow-installer.ts", "ccr/", "cometix/", "tools/"
      ],
      "keyInterfaces": [
        "ApiConfig", "McpServerConfig", "WorkflowInstallResult", 
        "CcrConfig", "CometixOptions", "PlatformInfo"
      ],
      "testFiles": [
        "tests/utils/*.test.ts", "tests/utils/*.edge.test.ts",
        "tests/utils/ccr/", "tests/utils/cometix/", "tests/unit/utils/"
      ],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 90,
      "gaps": []
    },
    {
      "path": "src/i18n",
      "type": "internationalization",
      "description": "Advanced i18next-based multilingual support with namespace organization for Chinese and English locales",
      "entryPoints": ["index.ts", "locales/zh-CN/", "locales/en/"],
      "keyInterfaces": ["i18n", "initI18n", "SupportedLang", "TranslationNamespaces"],
      "testFiles": ["tests/i18n/core/i18next-setup.test.ts", "tests/i18n/locales/workflow.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 88,
      "gaps": ["Some edge translation validation cases"]
    },
    {
      "path": "src/types",
      "type": "types",
      "description": "Comprehensive TypeScript type definitions for workflow, configuration, and tool integration",
      "entryPoints": ["workflow.ts", "config.ts", "ccr.ts"],
      "keyInterfaces": [
        "WorkflowConfig", "WorkflowType", "ApiConfig", 
        "ClaudeConfiguration", "CcrConfig", "WorkflowAgent"
      ],
      "testFiles": ["Implicit through usage in other modules"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 100,
      "gaps": []
    },
    {
      "path": "src/config",
      "type": "configuration",
      "description": "Centralized workflow configurations, MCP service definitions, and system presets",
      "entryPoints": ["workflows.ts", "mcp-services.ts"],
      "keyInterfaces": ["WorkflowConfig", "WORKFLOW_CONFIGS", "MCP_SERVICE_CONFIGS"],
      "testFiles": ["tests/config/workflows.test.ts", "tests/config/mcp-services.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 93,
      "gaps": []
    },
    {
      "path": "templates",
      "type": "templates",
      "description": "Enhanced multilingual configuration templates, workflows, and AI personality styles with output customization",
      "entryPoints": [
        "common/", "zh-CN/", "en/", 
        "output-styles/", "workflow/"
      ],
      "keyInterfaces": ["Template structure", "Workflow templates", "AI personalities", "Output styles"],
      "testFiles": ["tests/templates/*.test.ts"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 85,
      "gaps": ["Some template validation edge cases"]
    },
    {
      "path": "tests",
      "type": "testing",
      "description": "Comprehensive test suite with unit, integration, and edge case coverage, enhanced with helper utilities",
      "entryPoints": [
        "commands/", "utils/", "unit/", 
        "integration/", "edge/", "helpers/", "fixtures/"
      ],
      "keyInterfaces": ["Test helpers", "Mock functions", "Coverage utilities", "Test fixtures"],
      "testFiles": ["Self-testing module with 80% coverage requirements"],
      "claudeMdStatus": "current",
      "scanned": true,
      "coverage": 88,
      "gaps": ["Some integration test scenarios for external tools"]
    }
  ],
  "architecture_analysis": {
    "patterns": [
      "Modular CLI architecture with strict TypeScript typing and ESNext configuration",
      "Advanced i18next internationalization with namespace-based organization (zh-CN/en)",
      "Comprehensive cross-platform support (Windows/macOS/Linux/Termux)",
      "Enhanced template-based workflow system with AI personality support",
      "External tool integration (CCR, Cometix, CCusage) with version management",
      "Smart configuration merging with backup system for user preservation",
      "Test-driven development with layered testing and 80% coverage requirements",
      "Advanced error handling with user-friendly i18n messages"
    ],
    "key_technologies": [
      "TypeScript (ESM-only with ESNext target)",
      "i18next (advanced internationalization)",
      "Vitest (comprehensive testing framework)",
      "@antfu/eslint-config (strict code quality)",
      "unbuild (modern build system)",
      "pathe (cross-platform paths)",
      "tinyexec (reliable command execution)",
      "inquirer (enhanced interactive prompts)",
      "ansis (terminal styling)",
      "cac (CLI framework)"
    ],
    "integration_points": [
      "Claude Code installation and configuration management",
      "MCP service management with comprehensive configuration validation",
      "CCR proxy server integration with configuration backup",
      "Cometix status line tools with installer integration",
      "CCusage analytics integration with argument forwarding",
      "Git workflow automation with advanced templates",
      "AI personality configuration with output style customization",
      "Advanced i18next language switching and namespace management"
    ]
  },
  "coverage_analysis": {
    "total_files": 225,
    "scanned_files": 200,
    "coverage_by_type": {
      "source_files": "92% (98/107)",
      "test_files": "88% (70/80)",
      "config_files": "100% (18/18)",
      "template_files": "80% (16/20)"
    },
    "critical_paths_coverage": "98%",
    "documentation_coverage": "100%"
  },
  "recommendations": {
    "next_steps": [
      "Enhance integration test coverage for CCR and Cometix advanced features",
      "Add comprehensive template validation with edge case testing",
      "Expand cross-platform testing scenarios for Termux environment",
      "Consider adding performance benchmarks for large-scale template operations",
      "Implement automated dependency security auditing"
    ],
    "maintenance": [
      "Regular update of MCP service configurations with latest Claude Code features",
      "Template synchronization with evolving Claude Code capabilities",
      "Translation completeness verification and consistency checks",
      "Dependency security audits and version compatibility testing",
      "Performance monitoring for CLI operations and template processing"
    ]
  },
  "gaps": {
    "minor": [
      "Some edge translation validation cases in i18n module",
      "Template validation edge cases for complex scenarios",
      "Integration test scenarios for advanced external tool features"
    ],
    "documentation": "Complete - all modules comprehensively documented with navigation",
    "critical": "None identified - all critical functionality covered"
  }
}